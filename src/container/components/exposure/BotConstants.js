module.exports = Object.freeze({
    BOT_CONSTANTS: {
        subjectid: "Subject ID",
        studyname: "Study Name",
        siteregion: "Region",
        sitecra: "CRA",
        siteinvestigator: "Investigator",
        studyprogram: "Program",
        studysponsor: "Sponsor",
        ta: "Therapeutic Area",
        enrollmentandscreen: "Subject Disposition",
        subjectdisposition: "Subject Disposition",
        country: "Country",
        provider: "CRO",
        indication: "Indication",
        studylevel: "Study Level",
        countrylevel: "Country Level",
        sitelevel: "Site Level",
        sitestatus: "Site Status",
        study: "Study ID",
        site: "Site",
        studyphase: "Phase",
        studystatus: "Study Status",
        whichStudies: "tell me studies",
        whichCountries: "tell me countries",
        whichSites: "tell me sites",
        whichStatus: "tell me status",
        countSites: "count of sites",
        countStudies: "count of studies",
        countCountries: "count of countries",
        Milestone_count_studies: "count the studies where all milestones achieved",
        Milestone_which_studies: "tell me studies where all milestones achieved",
        Milestone_which_sites: "tell me sites where all milestones achieved",
        Milestone_count_sites: "count the sites where all milestones achieved",
        Milestone_which_countries: "tell me countries where all milestones achieved",
        milestoneCountCountries: "count the countries where all milestones achieved",
        milestoneWhichMilestone: "tell all milestone",
        milestoneCountMilestone: "count all milestone",
        milestoneWhatMilestone: "tell all milestone",
        milestoneWhenMilestone: "when was the milestone achieved",
        Enrollment_count_studies: "count studies which enrollment",
        Enrollment_count_countries: "count countries which enrollment",
        Enrollment_count_sites: "count sites which enrollment",
        Enrollment_count_enrollment: "count enrollment",
        Enrollment_which_studies: "tell me studies which have enrollment",
        Enrollment_which_countries: "tell me countries which have enrollment",
        Enrollment_which_sites: "tell me sites which have enrollment",
        Enrollment_count_screening: "count screening",
        Enrollment_when_screening: "when screening",
        Enrollment_when_enrollment: "when enrollment",
        Disambiguate: "I could not understand the question. Please try again",
        SelectFilters: "Select filters to proceed",
        NoResult: "No Result Found",
        ReframeQuestion: "Sorry !! I cannot understand the question , could you please reframe it.",
        RecommendedQuestion: "Would you also like to see?",
        ApplyFilterErrorMessage: "Something went wrong. Request you to try again after some time.",
        sentences: ["countStudies", "whichStudies", "whichCountries",
            "whichSites", "whichStatus", "countSites", "Milestone_which_studies",
            "Milestone_which_sites", "countCountries", "Milestone_count_sites",
            "Milestone_which_countries", "milestoneCountCountries", "milestoneWhichMilestone",
            "milestoneCountMilestone", "Milestone_count_studies", "milestoneWhatMilestone",
            "milestoneWhenMilestone", "Enrollment_count_studies", "Enrollment_count_countries",
            "Enrollment_count_sites", "Enrollment_count_enrollment", "Enrollment_which_studies",
            "Enrollment_which_countries", "Enrollment_which_sites", "Enrollment_count_screening",
            "Enrollment_when_screening", "Enrollment_when_enrollment"],
        freqAskQues: ["Total number of sites activated", "Total number of subjects enrolled", "Protocol deviation rate", "Open query rate", "Total number of adverse events"],
        standardized_medication_name: "Standardized Medication Name",
        cm_indication: "CM Indication",
        route_of_administration: "Route of Administration",
        aeterm: "AE term",
        severity: "Severity",
        relatedness: "Relatedness",
        poweredBy: "Powered by DaLIA",
        issuetype: "Issue Type",
        arm: "Cohort",
        lbtest: "Test Name",
        lbtestcd: "Lab Test Short Name",
        lbcat: "Test Category",
        lbscat: "Test Subcategory",
        schedule_compliance: "Schedule Compliance",
        category: "Category",
        visitnum: "Visit Number",
        visit: "Visit",
        relatedness_to_study_drug: "Relatedness to Study Drug",
        seriousness: "Seriousness",
        sitename: "Site Name",
        confirm_message: "Filters will get updated as per the DaLIA suggestion. Are you sure you want to proceed?"
    },
});

